// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+f11",
    "command": "workbench.action.toggleFullScreen"
  },
  {
    "key": "f11",
    "command": "-workbench.action.toggleFullScreen"
  },
  {
    "key": "f11",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+f9",
    "command": "workbench.action.terminal.runActiveFile"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "searchViewletVisible"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "fileDialog == 'local'"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "alt+m",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.showEmmetCommands",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+alt+`",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "shift+alt+v",
    "command": "toggleVim"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPreviousInDiff",
    "when": "isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+.",
    "command": "-gitlens.diffWithWorkingInDiff",
    "when": "isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "alt+o alt+f",
    "command": "gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+o alt+b",
    "command": "gitlens.showQuickRepoHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "shift+alt+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+o alt+p",
    "command": "editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+g shift+oem_comma",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g oem_comma",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g oem_minus",
    "command": "-gitlens.showLastQuickPick",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g oem_2",
    "command": "-gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g oem_period",
    "command": "-gitlens.diffWithNextInDiff",
    "when": "isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g oem_period",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g shift+oem_period",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g w",
    "command": "-gitlens.diffLineWithWorking",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "escape escape",
    "command": "-workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "ctrl+m l",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "ctrl+k ctrl+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+m v",
    "command": "workbench.action.openView"
  },
  {
    "key": "ctrl+m ctrl+m",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+m x",
    "command": "workbench.view.extensions"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions"
  },
  {
    "key": "ctrl+m g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "ctrl+m f",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "ctrl+m o",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+m p",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "ctrl+m s",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+m c",
    "command": "gitlens.views.compare:gitlens.focus"
  },
  {
    "key": "ctrl+m i",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+m h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+m d",
    "command": "workbench.view.debug"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "ctrl+m e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+m e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.addSelectionToPreviousFindMatch"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+shift+backspace",
    "command": "deleteAllLeft"
  },
  {
    "key": "ctrl+shift+delete",
    "command": "deleteAllRight"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.terminal.runSelectedText"
  },
  {
    "key": "shift+alt+u",
    "command": "-extension.updateSettings"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-code-runner.runByLanguage"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-code-runner.runCustomCommand"
  },
  {
    "key": "ctrl+m z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+d",
    "command": "-extension.downloadSettings"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus && !terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus && !terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k r",
    "command": "workbench.action.quickOpenRecent"
  },
  {
    "key": "ctrl+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+m ctrl+p",
    "command": "md-shortcut.showCommandPalette",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+m",
    "command": "-md-shortcut.showCommandPalette",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m m",
    "command": "markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+m n",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+m p",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+=",
    "command": "editor.action.showDefinitionPreviewHover"
  }
]